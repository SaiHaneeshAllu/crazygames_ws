<?xml version="1.0"?>
<launch>
  <!-- Define joystick port for PS3 controller-->
  <arg name = "joy_dev" default = "/dev/input/js0" />

  <!--Initialize parameters for the motion capture system-->
  <arg name="server" default="130.194.137.204" />
  <arg name="port" default="3883" />

  <!--Initialize parameters for AGENT1 (LEADER)-->
  <arg name="uri1" default="radio://0/85/2M/E7E7E7E703" />
  <arg name="frame1" default="crazyflie3" />

  <!--Initialize parameters for AGENT2 (FOLLOWER1)-->
  <arg name="uri2" default="radio://0/85/2M/E7E7E7E704" />
  <arg name="frame2" default="crazyflie4" />
  <arg name="xOffset2" default="0.0" />
  <arg name="yOffset2" default="1.0" />

  <arg name="uri3" default="radio://1/90/2M/E7E7E7E705" />
  <arg name="frame3" default="crazyflie5" />
  <arg name="xOffset3" default="-0.7" />
  <arg name="yOffset3" default="0.0" />

  <!--Safe landing spot for LEADER-->
  <arg name="x1" default="0" />
  <arg name="y1" default="0" />
  <arg name="z1" default="1" />
    <!--Safe landing spot for AGENT2-->
  <arg name="x2" default="0" />
  <arg name="y2" default="1" />
  <arg name="z2" default="1" />
  <!--Safe landing spot for AGENT3-->
  <arg name="x3" default="-1" />
  <arg name="y3" default="0" />
  <arg name="z3" default="1" />

  <!-- Launch CFserver-->
  <include file="$(find crazyflie_driver)/launch/crazyflie_server.launch">
  </include>

  <!--Initialize AGENT1 as (LEADER)-->
  <group ns="leader">
  
    <include file="$(find crazyflie_driver)/launch/crazyflie_add.launch">
        <arg name="uri" value="$(arg uri1)" />
        <arg name="tf_prefix" value="leader" />
        <arg name="roll_trim" default="1" />
        <arg name="pitch_trim" default="1" />
    </include>

    <node name="joy" pkg="joy" type="joy_node" output="screen" >
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <include file="$(find crazyflie_controller)/launch/init_controller.launch">
      <arg name="frame" value="$(arg frame1)" />
    </include>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="150" />
      <param name="x" value="$(arg x1)" />
      <param name="y" value="$(arg y1)" />
      <param name="z" value="$(arg z1)" />
    </node>
  </group>

  <group ns="follower1">
    <include file="$(find crazyflie_driver)/launch/crazyflie_add.launch">
      <arg name="uri" value="$(arg uri2)" />
      <arg name="tf_prefix" value="follower1" />
      <!--arg name="enable_logging" value="False" /-->
    </include>

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <include file="$(find crazyflie_controller)/launch/init_pursuit_evasion_controller.launch">
      <arg name="frame_follower" value="$(arg frame2)" />
      <arg name="frame_leader" value="$(arg frame1)" />
      <arg name="xOffset" value="$(arg xOffset2)" />
      <arg name="yOffset" value="$(arg yOffset2)" />
    </include>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="150" />
      <param name="x" value="$(arg x2)" />
      <param name="y" value="$(arg y2)" />
      <param name="z" value="$(arg z2)" />
    </node>

    <!--To visualize the current pose of the Crazyflie in rviz using the 3D model-->
    <!--node pkg="tf" type="static_transform_publisher" name="baselink_broadcaster" args="0 0 0 0 0 0 1 $(arg frame_follower) /follower/base_link 100" /-->
  </group>

  <group ns="follower2">
  <include file="$(find crazyflie_driver)/launch/crazyflie_add.launch">
    <arg name="uri" value="$(arg uri3)" />
    <arg name="tf_prefix" value="follower2" />
    <!--arg name="enable_logging" value="False" /-->
  </include>

  <node name="joy" pkg="joy" type="joy_node" output="screen">
    <param name="dev" value="$(arg joy_dev)" />
  </node>

  <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
    <param name="use_crazyflie_controller" value="True" />
  </node>

  <include file="$(find crazyflie_controller)/launch/init_pursuit_evasion_controller.launch">
    <arg name="frame_follower" value="$(arg frame3)" />
    <arg name="frame_leader" value="$(arg frame2)" />
    <arg name="xOffset" value="$(arg xOffset3)" />
      <arg name="yOffset" value="$(arg yOffset3)" />
  </include>

  <node name="pose" pkg="crazyflie_demo" type="publish_pose.py" output="screen">
    <param name="name" value="goal" />
    <param name="rate" value="150" />
    <param name="x" value="$(arg x3)" />
    <param name="y" value="$(arg y3)" />
    <param name="z" value="$(arg z3)" />
  </node>

  <!--To visualize the current pose of the Crazyflie in rviz using the 3D model-->
  <!--node pkg="tf" type="static_transform_publisher" name="baselink_broadcaster" args="0 0 0 0 0 0 1 $(arg frame_follower) /follower/base_link 100" /-->
</group>

  <node pkg="vrpn_client_ros" type="vrpn_client_node" name="vrpn_client_node" output="screen">
  <rosparam subst_value="true">
    server: $(arg server)
    port: $(arg port)

    update_frequency: 100.0
    frame_id: world

    # Use the VRPN server's time, or the client's ROS time.
    use_server_time: false
    broadcast_tf: true

    # Must either specify refresh frequency > 0.0, or a list of trackers to create
    refresh_tracker_frequency: 1.0
    #trackers:
    #- FirstTracker
    #- SecondTracker
  </rosparam>
  </node>

    <!-- run rviz -->
    <!--<param name="robot_description" command="$(find xacro)/xacro.py $(find crazyflie_description)/urdf/crazyflie.urdf.xacro" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find crazyflie_demo)/launch/crazyflie_pos.rviz" required="true" />-->

</launch>